{"version":3,"sources":["container/gradient.style.js","components/button/button.style.js","components/button/button.js","components/inputColor/inputElement.style.js","components/inputColor/inputColor.js","components/canvas/canvas.style.js","components/canvas/canvas.js","components/canvasString/canvasString.style.js","components/canvasString/canvasString.js","container/gradient.js","App.js","serviceWorker.js","index.js"],"names":["GradienteContainer","styled","div","ButtonElement","CustomButton","handleClik","props","onHandleFunction","parameters","onClick","this","className","active","title","Component","InputElement","InputColor","handleChange","e","value","target","color","onChange","GradientElement","Canvas","StringElement","CanvasString","currentMode","direction","color1","color2","Gradient","state","backgroun","directions","name","onHandleDirection","setState","onHandleMode","setColor1","setColor2","map","currentDirection","index","key","id","App","style","height","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c540faa.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst GradienteContainer = styled.div `\nfont-family: sans-serif;\nbackground: #2d2a2a; \nheight: 1000px !important;  \n\n .header {\n   padding-top: 50px; \n   padding-bottom: 50px; \n   padding-left: 50px; \n   display: flex;\n   flex-direction: column;\n   align-items: left;\n   justify-items: left;\n   text-align: -webkit-left;\n   color: #fff;\n   b {font-size: 20px;}\n }\n .body-gradient { \n   display: flex;\n   justify-content: center; \n  \n   box-shadow: 2px 2px 5px rgba(0,0,0,0.03);\n   border-radius: 4px;\n\n   color: #fff;\n   font-family: \"Lucida Console\", Monaco, monospace;\n   padding-left: 200px;\n   padding-right:200px;\n    .p {\n     text-align: center; \n     margin: .25rem;\n     padding: .25rem;\n   } \n\n   .row {\n     display: flex;\n     flex-wrap: wrap;\n     padding-bottom: 15px;\n   }\n   \n   .column {\n     padding: 5px;\n     flex-direction: row; \n   } \n     \n   .stringStyle{\n     margin-top: 15px;\n     padding: 50px;\n     border: 1px solid white;\n     border-radius: 25px;\n   } \n}\n`;\n/*\nconst color1 = props => props['color1'] ? props['color1'] : '#FFF';\nconst color2 = props => props['color2'] ? props['color2'] : '#7A7FBA';\n\nconst GradientElement = styled.div `\n    border-radius: 4px;\n    margin: .25rem;\n    padding: .25rem;\n    width: 500px;\n    height: 300px;\n    background: linear-gradient(to ${props => props['linear'] ? props['linear'] : 'top'}, ${color1}, ${color2}); \n} \n`;\n\nconst RadialElement = styled.div `\n border-radius: 4px;\n margin: .25rem;\n padding: .25rem;\n width: 500px;\n height: 300px;\n background: radial-gradient(circle at  ${props => props['linear'] ? props['linear'] : 'top'},   ${color1}, ${color2}); \n} \n`;\n*/\nexport { GradienteContainer }","import styled from 'styled-components';\n\nconst ButtonElement = styled.div ` \n  \n.button {\n\tdisplay: block;\n  height: 50px;\n  max-width: 100%;\n  margin: 0 auto;\n  margin-bottom: 0;\n  overflow: hidden;\n  position: relative;\n  transform: translatez(0);\n  text-decoration: none;\n  box-sizing: border-box;\n  font-size: 18px;\n\tfont-weight: normal;\n  box-shadow: 0 9px 18px rgba(0,0,0,0.2); \n  text-align: center;\n\tborder-radius: 15px;\n  padding: 15px;\n  color: white;\n  border: 1px solid white;\n  cursor: pointer; \n} \n.active {\n  border: none;\n  background: #BD3381;\n  transition: all 0.2s ease-out 0s;\n  .gradient {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    bottom: auto;\n    margin: auto;\n    z-index: -1;\n    background: radial-gradient(90px circle at top center, rgba(238,88,63,.8) 30%, rgba(255,255,255,0));\n    transition: all 0s ease-out 0s;\n    transform: translatex(-140px);\n    animation: 5s linear 0s infinite move;\n  }\n  \n  @keyframes move {\n    0% {\n      transform: translatex(-140px);\n    }\n    25% {\n      transform: translatex(140px);\n      opacity: 0.3;\n    }\n    50% {\n      transform: translatex(140px);\n      opacity: 1;\n      background: radial-gradient(90px circle at bottom center, rgba(238,88,63,.5) 30%, rgba(255,255,255,0));\n    }\n    75% {\n      transform: translatex(-140px);\n      opacity: 0.3;\n    }\n    100% {\n      opacity: 1;\n      transform: translatex(-140px);\n      background: radial-gradient(90px circle at top center, rgba(238,88,63,.5) 30%, rgba(255,255,255,0));\n    }\n  }   \n}\n\n\n`;\n\nexport { ButtonElement }","import React, { Component } from 'react';\nimport { ButtonElement } from './button.style'\n\n\nexport default class CustomButton  extends Component{ \n \n  handleClik=()=>{\n    this.props.onHandleFunction(this.props.parameters  || false);\n }\n  render() {\n  return (\n    <ButtonElement >\n      <section\n        onClick={this.handleClik}\n        className={`button instagram ${this.props.active && 'active'}`} >\n        < span className=\"gradient\" > </span>{this.props.title}\n      </section>\n    </ButtonElement >\n  );\n  }\n}","import styled from 'styled-components';\n\nconst InputElement = styled.div `\n  margin-bottom: 10px;\n  display: flex;\n .miniColor{\n  margin-right: 5px;\n  background-color: ${props => props['color'] ? props['color'] : 'red'};\n  padding: 5px;\n  border-radius:5px;\n  color: ${props => props['color'] ? props['color'] : 'red'};\n }\n}  \n`;\n\nexport { InputElement }","import React, { Component } from 'react';\nimport { InputElement } from './inputElement.style'\n\nexport default class InputColor extends Component {\n\n  handleChange = (e) => {\n    this.props.onHandleFunction({ value: e.target.value });\n  }\n  render() {\n    return (\n      <InputElement color={this.props.color}>\n        <div className='miniColor'> C1 </div>\n        <input value={this.props.color} onChange={this.handleChange} />\n      </InputElement >\n    );\n  }\n}","import styled from 'styled-components';\nconst DEFAULT_COLOR1 = '#FFF';\nconst DEFAULT_COLOR2 = '#7A7FBA';\n\nconst backgroundProp = props => !props['currentMode'] ?\n    `linear-gradient(to ${props['direction'] ? props['direction'] : 'top'}, \n                        ${props['color1'] ? props['color1'] : DEFAULT_COLOR1}, \n                        ${props['color2'] ? props['color2'] : DEFAULT_COLOR2});\n                        ` :\n    `radial-gradient(circle at ${props['direction'] ? props['direction'] : 'top'}, \n                        ${props['color1'] ? props['color1'] : DEFAULT_COLOR1}, \n                        ${props['color2'] ? props['color2'] : DEFAULT_COLOR2 });\n                        `;\n\nconst GradientElement = styled.div `\n    border-radius: 4px;\n    margin: .25rem;\n    padding: .25rem;\n    width: 500px;\n    height: 300px;\n    background: ${backgroundProp}\n} \n`;\n\nexport { GradientElement }","import React from 'react';\nimport { GradientElement } from './canvas.style'\n\nfunction Canvas(props) {\n  return (\n    <GradientElement {...props} />\n  );\n}\n\nexport default Canvas;","import styled from 'styled-components';\n\nconst StringElement = styled.div `\n  margin-top: 15px;\n  padding: 35px;\n  border: 1px solid white;\n  border-radius: 25px;\n  div {\n    padding-top: 10px;\n    text-align: initial;\n    color: gray;\n  }\n}\n`;\n\nexport { StringElement }","import React from 'react';\nimport { StringElement } from './canvasString.style'\n\nfunction CanvasString(props) {\n  return (\n    <StringElement >\n      {\n        props.currentMode ?\n          <section>\n            <div>background: linear-gradient(to {props.direction}, {props.color1},  {props.color2});</div>\n            <div>background: -webkit-linear-gradient(to {props.direction}, {props.color1}, {props.color2});</div>\n            <div>background: -moz-linear-gradient(to {props.direction}, {props.color1}, {props.color2});</div>\n            <div>background: -webkit-linear-gradient(to {props.direction}, {props.color1}, {props.color2});</div>\n            <div>background: -o-linear-gradient(to {props.direction}, {props.color1}, {props.color2});</div>\n          </section>\n          :\n          <section>\n            <div>background: radial-gradient(circle at {props.direction}, {props.color1}, {props.color2});</div>\n            <div>background: radial-gradient(circle at {props.direction}, {props.color1}, {props.color2});</div>\n            <div>background: radial-gradient(circle at {props.direction}, {props.color1}, {props.color2});</div>\n            <div>background: radial-gradient(circle at{props.direction}, {props.color1}, {props.color2});</div>\n            <div>background: radial-gradient(circle at {props.direction}, {props.color1}, {props.color2});</div>\n          </section>\n      }\n    </StringElement>\n  );\n}\n\nexport default CanvasString;","import React, { Component } from 'react';\nimport { GradienteContainer } from './gradient.style';\nimport { CustomButton, InputColor, Canvas, CanvasString } from '../components';\n\nexport default class Gradient extends Component {\n\n  state = {\n    direction: 'top',\n    currentMode: true,\n    color1: \"#FFF\",\n    color2: \"#7A7FBA\",\n    backgroun: false\n  };\n  directions = [\n    { name: 'Top', value: 'top' },\n    { name: 'Top Right', value: 'top right' },\n    { name: 'Right', value: 'Right' },\n    { name: 'Bottom Right', value: 'bottom right' },\n    { name: 'Bottom', value: 'bottom' },\n    { name: 'Bottom Left', value: 'bottom left' },\n    { name: 'Left', value: 'left' },\n    { name: 'Top Left', value: 'top left' },\n  ]\n  onHandleDirection = ({ value }) => {\n    this.setState({ direction: value })\n  }\n\n  onHandleMode = () => {\n    const currentMode = !this.state.currentMode;\n    this.setState({ currentMode })\n  }\n\n  setColor1 = ({ value }) => {\n    this.setState({ color1: value });\n  }\n\n  setColor2 = ({ value }) => {\n    this.setState({ color2: value });\n  }\n\n  render() {\n\n    const { direction, currentMode, color1, color2 } = this.state;\n\n    return (<GradienteContainer color1={color1}\n      color2={color2} >\n      <div className=\"header\" >\n        <b>CSS GRADIENT </b> <span>Gradient Generator </span>\n        <span>Maria Garcia - Chavez </span>\n      </div>\n      <div className=\"body-gradient\" >\n        <div >\n          <div className='row'><b>STYLE </b></div >\n          <div className='row' >\n            <div className='column' >\n              <CustomButton active={currentMode} title=\"Linear\" onHandleFunction={this.onHandleMode} />\n            </div>\n            <div className='column' >\n              <CustomButton active={!currentMode} title=\"Radio\" onHandleFunction={this.onHandleMode} />\n            </div>\n          </div>\n          <div className='row'><b>DIRECTION </b></div >\n          <div className='row'>\n            {\n              this.directions.map((currentDirection, index) =>\n                <div className='column' key={index} id={index} >\n                  <CustomButton parameters={{ value: currentDirection.value }}\n                    active={currentDirection.value === direction}\n                    title={currentDirection.name}\n                    onHandleFunction={this.onHandleDirection} />\n                </div>)\n            }\n          </div>\n          <div className='row'><b>COLORS </b></div >\n          <div className='row' key=\"colors\" id=\"colors\" >\n            <InputColor color={color1} onHandleFunction={this.setColor1} />\n          </div>\n          <div className='row' >\n            <InputColor color={color2} onHandleFunction={this.setColor2} />\n          </div>\n        </div>\n        <div>\n\n          <Canvas key=\"linear\"\n            id=\"linear\"\n            currentMode={currentMode}\n            direction={direction}\n            color1={color1}\n            color2={color2} />\n          <CanvasString\n            currentMode={currentMode}\n            direction={direction}\n            color1={color1}\n            color2={color2}\n          />\n        </div>\n      </div >\n    </GradienteContainer >\n\n\n    );\n  }\n}","import React from 'react';\nimport Gradient from './container/gradient';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\"  >\n\n      <section style={{ height: '100% !important' }} >\n        <Gradient />\n      </section>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}